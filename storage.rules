rules_version = '2';

// Craft rules based on data in your Firestore database
// allow write: if firestore.get(
//    /databases/(default)/documents/users/$(request.auth.uid)).data.isAdmin;
service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    // Allow public read access to captions files
    match /captions/{fileName} {
      allow read: if true;  // Public read access
      allow write: if false;  // Only allow writes through Cloud Functions
    }

    // Temporary files for video processing
    match /temp/{fileName} {
      allow read: if isSignedIn();
      allow create, write: if isSignedIn();  // Allow authenticated users to upload
      allow delete: if false;  // Only allow deletion through Cloud Functions
    }

    // Video files - require auth for upload, public for viewing
    match /videos/{userId}/{fileName} {
      allow read: if true;  // Public read access
      allow write: if isOwner(userId);  // Only owner can upload
    }

    // Thumbnails - public read, restricted write
    match /thumbnails/{fileName} {
      allow read: if true;  // Public read access
      allow write: if false;  // Only allow writes through Cloud Functions
    }

    // Profile photos
    match /profile_photos/{userId}/{fileName} {
      allow read: if true;
      allow write: if isOwner(userId);
    }

    // Default rule - deny all other access
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}

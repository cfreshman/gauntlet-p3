rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    // Videos collection
    match /videos/{videoId} {
      allow read: if true;  // Public read access
      allow create: if isSignedIn() && request.resource.data.creatorId == request.auth.uid;
      allow update, delete: if isOwner(resource.data.creatorId);
      
      // Comments subcollection
      match /comments/{commentId} {
        allow read: if true;
        allow create: if isSignedIn();
        allow update, delete: if isOwner(resource.data.userId);
      }
      
      // Likes subcollection
      match /likes/{userId} {
        allow read: if true;
        allow write: if isOwner(userId);
      }
    }
    
    // Users collection
    match /users/{userId} {
      allow read: if true;
      allow create: if isSignedIn() && request.auth.uid == userId;
      allow update: if isOwner(userId);
      allow delete: if false;  // Don't allow user deletion
    }
    
    // Playlists collection
    match /playlists/{playlistId} {
      allow read: if true;
      allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
      allow update, delete: if isOwner(resource.data.userId);
    }
  }
}